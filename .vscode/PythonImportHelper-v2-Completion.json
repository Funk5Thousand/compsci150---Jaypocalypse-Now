[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "utilities",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "utilities",
        "description": "utilities",
        "detail": "utilities",
        "documentation": {}
    },
    {
        "label": "yara",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "yara",
        "description": "yara",
        "detail": "yara",
        "documentation": {}
    },
    {
        "label": "psutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psutil",
        "description": "psutil",
        "detail": "psutil",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "traceback",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "traceback",
        "description": "traceback",
        "detail": "traceback",
        "documentation": {}
    },
    {
        "label": "codecs",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "codecs",
        "description": "codecs",
        "detail": "codecs",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013191722",
        "description": ".history.app_20251013191722",
        "peekOfCode": "def get_yara_rules():\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.",
        "detail": ".history.app_20251013191722",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013191730",
        "description": ".history.app_20251013191730",
        "peekOfCode": "def get_yara_rules():\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"",
        "detail": ".history.app_20251013191730",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013191946",
        "description": ".history.app_20251013191946",
        "peekOfCode": "def get_yara_rules():\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara files",
        "detail": ".history.app_20251013191946",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013192024",
        "description": ".history.app_20251013192024",
        "peekOfCode": "def get_yara_rules():\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"",
        "detail": ".history.app_20251013192024",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013192202",
        "description": ".history.app_20251013192202",
        "peekOfCode": "def get_yara_rules():\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []",
        "detail": ".history.app_20251013192202",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013192229",
        "description": ".history.app_20251013192229",
        "peekOfCode": "def get_yara_rules():\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk()",
        "detail": ".history.app_20251013192229",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013192241",
        "description": ".history.app_20251013192241",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk()",
        "detail": ".history.app_20251013192241",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013192334",
        "description": ".history.app_20251013192334",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if file.endswith(extension):",
        "detail": ".history.app_20251013192334",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.app_20251013192343",
        "description": ".history.app_20251013192343",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if file.endswith(extension):",
        "detail": ".history.app_20251013192343",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013192503",
        "description": ".history.app_20251013192503",
        "peekOfCode": "def main():",
        "detail": ".history.app_20251013192503",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195440",
        "description": ".history.app_20251013195440",
        "peekOfCode": "def main():",
        "detail": ".history.app_20251013195440",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195452",
        "description": ".history.app_20251013195452",
        "peekOfCode": "def main():\n    util.get_yara_rules",
        "detail": ".history.app_20251013195452",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195514",
        "description": ".history.app_20251013195514",
        "peekOfCode": "def main():\n    util.get_yara_rules('C:\\Users\\kgregory\\Documents\\Malware\\compsci150---Jaypocalypse-Now\\yararules')",
        "detail": ".history.app_20251013195514",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195550",
        "description": ".history.app_20251013195550",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('C:\\Users\\kgregory\\Documents\\Malware\\compsci150---Jaypocalypse-Now\\yararules')\n    print(yara_rules_dict)",
        "detail": ".history.app_20251013195550",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195628",
        "description": ".history.app_20251013195628",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('C:\\\\Users\\\\kgregory\\\\Documents\\\\Malware\\\\compsci150---Jaypocalypse-Now\\\\yararules')\n    print(yara_rules_dict)",
        "detail": ".history.app_20251013195628",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195656",
        "description": ".history.app_20251013195656",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\yararules')\n    print(yara_rules_dict)",
        "detail": ".history.app_20251013195656",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195729",
        "description": ".history.app_20251013195729",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\yararules')\n    print(yara_rules_dict)\nif",
        "detail": ".history.app_20251013195729",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195748",
        "description": ".history.app_20251013195748",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\yararules')\n    print(yara_rules_dict)\nif __name__ == \"__main__\":\nmain()",
        "detail": ".history.app_20251013195748",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013195937",
        "description": ".history.app_20251013195937",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\nif __name__ == \"__main__\":\nmain()",
        "detail": ".history.app_20251013195937",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200016",
        "description": ".history.app_20251013200016",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200016",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200750",
        "description": ".history.app_20251013200750",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200750",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200815",
        "description": ".history.app_20251013200815",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, \nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200815",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200852",
        "description": ".history.app_20251013200852",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200852",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200912",
        "description": ".history.app_20251013200912",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200912",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200920",
        "description": ".history.app_20251013200920",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200920",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200938",
        "description": ".history.app_20251013200938",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\n    rules.save(\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200938",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013200955",
        "description": ".history.app_20251013200955",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\n    rules.save('.//yara\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013200955",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201019",
        "description": ".history.app_20251013201019",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\n    rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201019",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201046",
        "description": ".history.app_20251013201046",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\n    rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201046",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201117",
        "description": ".history.app_20251013201117",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if os.path.exists(\n    compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\n    rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201117",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201214",
        "description": ".history.app_20251013201214",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=True)\n        rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201214",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201438",
        "description": ".history.app_20251013201438",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=False)\n        rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201438",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201526",
        "description": ".history.app_20251013201526",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        compiled_rules = yara.compile(fileaths=yara_rules_dict, error_on_warnin=False)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201526",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201835",
        "description": ".history.app_20251013201835",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        compiled_rules = yara.compile(filepaths=yara_rules_dict, error_on_warnin=False)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201835",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201850",
        "description": ".history.app_20251013201850",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    print(yara_rules_dict)\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201850",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013201916",
        "description": ".history.app_20251013201916",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013201916",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013202011",
        "description": ".history.app_20251013202011",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251013202011",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203541",
        "description": ".history.app_20251013203541",
        "peekOfCode": "def main():\n    yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    util.get_all_files\nif __name__ == \"__main__\":",
        "detail": ".history.app_20251013203541",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203635",
        "description": ".history.app_20251013203635",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    util.get_all_files\nif __name__ == \"__main__\":",
        "detail": ".history.app_20251013203635",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203710",
        "description": ".history.app_20251013203710",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    util.get_all_files(\"C:\\\\\")\nif __name__ == \"__main__\":",
        "detail": ".history.app_20251013203710",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203743",
        "description": ".history.app_20251013203743",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\nif __name__ == \"__main__\":",
        "detail": ".history.app_20251013203743",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203802",
        "description": ".history.app_20251013203802",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\nif __name__ == \"__main__\":",
        "detail": ".history.app_20251013203802",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203831",
        "description": ".history.app_20251013203831",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    matches",
        "detail": ".history.app_20251013203831",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203911",
        "description": ".history.app_20251013203911",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013203911",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203919",
        "description": ".history.app_20251013203919",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013203919",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203938",
        "description": ".history.app_20251013203938",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n        print(\"some nonesense\")\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013203938",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013203952",
        "description": ".history.app_20251013203952",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        compiled_rules.match(file)",
        "detail": ".history.app_20251013203952",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013204126",
        "description": ".history.app_20251013204126",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        compiled_rules.match(file)",
        "detail": ".history.app_20251013204126",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013204132",
        "description": ".history.app_20251013204132",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        matches = compiled_rules.match(file)",
        "detail": ".history.app_20251013204132",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013204400",
        "description": ".history.app_20251013204400",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:",
        "detail": ".history.app_20251013204400",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013204520",
        "description": ".history.app_20251013204520",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:",
        "detail": ".history.app_20251013204520",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013204652",
        "description": ".history.app_20251013204652",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:",
        "detail": ".history.app_20251013204652",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013204748",
        "description": ".history.app_20251013204748",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:",
        "detail": ".history.app_20251013204748",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013210310",
        "description": ".history.app_20251013210310",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013210310",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013210325",
        "description": ".history.app_20251013210325",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013210325",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013210335",
        "description": ".history.app_20251013210335",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013210335",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013210346",
        "description": ".history.app_20251013210346",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013210346",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251013210458",
        "description": ".history.app_20251013210458",
        "peekOfCode": "def main():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251013210458",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016192726",
        "description": ".history.app_20251016192726",
        "peekOfCode": "def main():\nif __name__ == \"__main__\":\n    main()\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []",
        "detail": ".history.app_20251016192726",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016192750",
        "description": ".history.app_20251016192750",
        "peekOfCode": "def main():\nif __name__ == \"__main__\":\n    main()\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')",
        "detail": ".history.app_20251016192750",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016192750",
        "description": ".history.app_20251016192750",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016192750",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016192849",
        "description": ".history.app_20251016192849",
        "peekOfCode": "def main():\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")",
        "detail": ".history.app_20251016192849",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016192849",
        "description": ".history.app_20251016192849",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016192849",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016192858",
        "description": ".history.app_20251016192858",
        "peekOfCode": "def main():\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")",
        "detail": ".history.app_20251016192858",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016192858",
        "description": ".history.app_20251016192858",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016192858",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016192938",
        "description": ".history.app_20251016192938",
        "peekOfCode": "def main():\n    scan_file_system()\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []",
        "detail": ".history.app_20251016192938",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016192938",
        "description": ".history.app_20251016192938",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016192938",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193032",
        "description": ".history.app_20251016193032",
        "peekOfCode": "def main():\n    scan_file_system()\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []",
        "detail": ".history.app_20251016193032",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193032",
        "description": ".history.app_20251016193032",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193032",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193234",
        "description": ".history.app_20251016193234",
        "peekOfCode": "def main():\n    Print(\"Welcome to CompSci 150 Malware Scanner\")\n    scan_file_system()\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')",
        "detail": ".history.app_20251016193234",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193234",
        "description": ".history.app_20251016193234",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193234",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193742",
        "description": ".history.app_20251016193742",
        "peekOfCode": "def main():\n    Print(\"Welcome to CompSci 150 Malware Scanner\")\n    input('''\n    scan_file_system()\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)",
        "detail": ".history.app_20251016193742",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193742",
        "description": ".history.app_20251016193742",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193742",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193814",
        "description": ".history.app_20251016193814",
        "peekOfCode": "def main():\n    Print(\"Welcome to CompSci 150 Malware Scanner\")\n    input('''\n          Welcome\n    scan_file_system()\ndef scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')",
        "detail": ".history.app_20251016193814",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193814",
        "description": ".history.app_20251016193814",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193814",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193926",
        "description": ".history.app_20251016193926",
        "peekOfCode": "def main():\n    Print(\"Welcome to CompSci 150 Malware Scanner\")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        '''\n    scan_file_system()\ndef scan_file_system():",
        "detail": ".history.app_20251016193926",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193926",
        "description": ".history.app_20251016193926",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193926",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193943",
        "description": ".history.app_20251016193943",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        '''\n    scan_file_system()",
        "detail": ".history.app_20251016193943",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193943",
        "description": ".history.app_20251016193943",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193943",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016193952",
        "description": ".history.app_20251016193952",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    scan_file_system()",
        "detail": ".history.app_20251016193952",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016193952",
        "description": ".history.app_20251016193952",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016193952",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194005",
        "description": ".history.app_20251016194005",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    scan_file_system()",
        "detail": ".history.app_20251016194005",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194005",
        "description": ".history.app_20251016194005",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194005",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194132",
        "description": ".history.app_20251016194132",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == ",
        "detail": ".history.app_20251016194132",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194132",
        "description": ".history.app_20251016194132",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194132",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194150",
        "description": ".history.app_20251016194150",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == type(1):",
        "detail": ".history.app_20251016194150",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194150",
        "description": ".history.app_20251016194150",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194150",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194248",
        "description": ".history.app_20251016194248",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194248",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194248",
        "description": ".history.app_20251016194248",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194248",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194259",
        "description": ".history.app_20251016194259",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194259",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194259",
        "description": ".history.app_20251016194259",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194259",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194347",
        "description": ".history.app_20251016194347",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194347",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194347",
        "description": ".history.app_20251016194347",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194347",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194419",
        "description": ".history.app_20251016194419",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194419",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194419",
        "description": ".history.app_20251016194419",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194419",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194518",
        "description": ".history.app_20251016194518",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194518",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194518",
        "description": ".history.app_20251016194518",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194518",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194604",
        "description": ".history.app_20251016194604",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194604",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194604",
        "description": ".history.app_20251016194604",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194604",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194625",
        "description": ".history.app_20251016194625",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194625",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194625",
        "description": ".history.app_20251016194625",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194625",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194710",
        "description": ".history.app_20251016194710",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194710",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194710",
        "description": ".history.app_20251016194710",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194710",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016194755",
        "description": ".history.app_20251016194755",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016194755",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016194755",
        "description": ".history.app_20251016194755",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016194755",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016200935",
        "description": ".history.app_20251016200935",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016200935",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016200935",
        "description": ".history.app_20251016200935",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016200935",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201249",
        "description": ".history.app_20251016201249",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201249",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201249",
        "description": ".history.app_20251016201249",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016201249",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201249",
        "description": ".history.app_20251016201249",
        "peekOfCode": "def scan_processes():\n    pids = util.get_process_pids()\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201249",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201334",
        "description": ".history.app_20251016201334",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201334",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201334",
        "description": ".history.app_20251016201334",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016201334",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201334",
        "description": ".history.app_20251016201334",
        "peekOfCode": "def scan_processes():\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201334",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201342",
        "description": ".history.app_20251016201342",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201342",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201342",
        "description": ".history.app_20251016201342",
        "peekOfCode": "def scan_file_system():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:",
        "detail": ".history.app_20251016201342",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201342",
        "description": ".history.app_20251016201342",
        "peekOfCode": "def scan_processes():\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = .match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201342",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201411",
        "description": ".history.app_20251016201411",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201411",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201411",
        "description": ".history.app_20251016201411",
        "peekOfCode": "def scan_file_system():\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass\n    for match in matches:",
        "detail": ".history.app_20251016201411",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201411",
        "description": ".history.app_20251016201411",
        "peekOfCode": "def scan_processes():\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = .match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201411",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201454",
        "description": ".history.app_20251016201454",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201454",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201454",
        "description": ".history.app_20251016201454",
        "peekOfCode": "def scan_file_system():\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass\n    for match in matches:",
        "detail": ".history.app_20251016201454",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201454",
        "description": ".history.app_20251016201454",
        "peekOfCode": "def scan_processes():\n    rules = util.get\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = .match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201454",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201610",
        "description": ".history.app_20251016201610",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201610",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201610",
        "description": ".history.app_20251016201610",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016201610",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201610",
        "description": ".history.app_20251016201610",
        "peekOfCode": "def scan_processes():\n    rules = util.get\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = .match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201610",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201712",
        "description": ".history.app_20251016201712",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201712",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201712",
        "description": ".history.app_20251016201712",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016201712",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201712",
        "description": ".history.app_20251016201712",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = .match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201712",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016201727",
        "description": ".history.app_20251016201727",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016201727",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016201727",
        "description": ".history.app_20251016201727",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016201727",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016201727",
        "description": ".history.app_20251016201727",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016201727",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202458",
        "description": ".history.app_20251016202458",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016202458",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202458",
        "description": ".history.app_20251016202458",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202458",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202458",
        "description": ".history.app_20251016202458",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202458",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202546",
        "description": ".history.app_20251016202546",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'int':",
        "detail": ".history.app_20251016202546",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202546",
        "description": ".history.app_20251016202546",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202546",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202546",
        "description": ".history.app_20251016202546",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202546",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202634",
        "description": ".history.app_20251016202634",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == type(1):",
        "detail": ".history.app_20251016202634",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202634",
        "description": ".history.app_20251016202634",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202634",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202634",
        "description": ".history.app_20251016202634",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202634",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202713",
        "description": ".history.app_20251016202713",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == :",
        "detail": ".history.app_20251016202713",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202713",
        "description": ".history.app_20251016202713",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202713",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202713",
        "description": ".history.app_20251016202713",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202713",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202739",
        "description": ".history.app_20251016202739",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'str':",
        "detail": ".history.app_20251016202739",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202739",
        "description": ".history.app_20251016202739",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202739",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202739",
        "description": ".history.app_20251016202739",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202739",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202749",
        "description": ".history.app_20251016202749",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == :",
        "detail": ".history.app_20251016202749",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202749",
        "description": ".history.app_20251016202749",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202749",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202749",
        "description": ".history.app_20251016202749",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202749",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202805",
        "description": ".history.app_20251016202805",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == :",
        "detail": ".history.app_20251016202805",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202805",
        "description": ".history.app_20251016202805",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202805",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202805",
        "description": ".history.app_20251016202805",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202805",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202830",
        "description": ".history.app_20251016202830",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if type(user_response) == 'str':",
        "detail": ".history.app_20251016202830",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202830",
        "description": ".history.app_20251016202830",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202830",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202830",
        "description": ".history.app_20251016202830",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202830",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202919",
        "description": ".history.app_20251016202919",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if user_response == '1':",
        "detail": ".history.app_20251016202919",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202919",
        "description": ".history.app_20251016202919",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202919",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202919",
        "description": ".history.app_20251016202919",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202919",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".history.app_20251016202922",
        "description": ".history.app_20251016202922",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if user_response == '1':",
        "detail": ".history.app_20251016202922",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": ".history.app_20251016202922",
        "description": ".history.app_20251016202922",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": ".history.app_20251016202922",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": ".history.app_20251016202922",
        "description": ".history.app_20251016202922",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": ".history.app_20251016202922",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013192430",
        "description": ".history.utilities_20251013192430",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if file.endswith(extension):",
        "detail": ".history.utilities_20251013192430",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193341",
        "description": ".history.utilities_20251013193341",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193341",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193641",
        "description": ".history.utilities_20251013193641",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193641",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193707",
        "description": ".history.utilities_20251013193707",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193707",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193808",
        "description": ".history.utilities_20251013193808",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193808",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193831",
        "description": ".history.utilities_20251013193831",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193831",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193906",
        "description": ".history.utilities_20251013193906",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193906",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013193935",
        "description": ".history.utilities_20251013193935",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(directory):\n        for file in files:",
        "detail": ".history.utilities_20251013193935",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013194127",
        "description": ".history.utilities_20251013194127",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013194127",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013195857",
        "description": ".history.utilities_20251013195857",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013195857",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013202915",
        "description": ".history.utilities_20251013202915",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013202915",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013202943",
        "description": ".history.utilities_20251013202943",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013202943",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013202943",
        "description": ".history.utilities_20251013202943",
        "peekOfCode": "def get_all_files(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013202943",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013202954",
        "description": ".history.utilities_20251013202954",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013202954",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013202954",
        "description": ".history.utilities_20251013202954",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013202954",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013203011",
        "description": ".history.utilities_20251013203011",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013203011",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013203011",
        "description": ".history.utilities_20251013203011",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            if file.endswith(\".yar\"):",
        "detail": ".history.utilities_20251013203011",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013203027",
        "description": ".history.utilities_20251013203027",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013203027",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013203027",
        "description": ".history.utilities_20251013203027",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of YARA rule file paths.\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            if file.endswith(\".yar\"):",
        "detail": ".history.utilities_20251013203027",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013203044",
        "description": ".history.utilities_20251013203044",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013203044",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013203044",
        "description": ".history.utilities_20251013203044",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    yara_files = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            if file.endswith(\".yar\"):",
        "detail": ".history.utilities_20251013203044",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013203131",
        "description": ".history.utilities_20251013203131",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013203131",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013203131",
        "description": ".history.utilities_20251013203131",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(file)",
        "detail": ".history.utilities_20251013203131",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251013203420",
        "description": ".history.utilities_20251013203420",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251013203420",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251013203420",
        "description": ".history.utilities_20251013203420",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251013203420",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201213",
        "description": ".history.utilities_20251016201213",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201213",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201213",
        "description": ".history.utilities_20251016201213",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201213",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201213",
        "description": ".history.utilities_20251016201213",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()",
        "detail": ".history.utilities_20251016201213",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201436",
        "description": ".history.utilities_20251016201436",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201436",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201436",
        "description": ".history.utilities_20251016201436",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201436",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201436",
        "description": ".history.utilities_20251016201436",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201436",
        "documentation": {}
    },
    {
        "label": "get_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201436",
        "description": ".history.utilities_20251016201436",
        "peekOfCode": "def get_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201436",
        "documentation": {}
    },
    {
        "label": "get_yara_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201521",
        "description": ".history.utilities_20251016201521",
        "peekOfCode": "def get_yara_rules(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201521",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201521",
        "description": ".history.utilities_20251016201521",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201521",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201521",
        "description": ".history.utilities_20251016201521",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201521",
        "documentation": {}
    },
    {
        "label": "get_compiled_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201521",
        "description": ".history.utilities_20251016201521",
        "peekOfCode": "def get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201521",
        "documentation": {}
    },
    {
        "label": "get_yara_rules_paths",
        "kind": 2,
        "importPath": ".history.utilities_20251016201530",
        "description": ".history.utilities_20251016201530",
        "peekOfCode": "def get_yara_rules_paths(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201530",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201530",
        "description": ".history.utilities_20251016201530",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201530",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201530",
        "description": ".history.utilities_20251016201530",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201530",
        "documentation": {}
    },
    {
        "label": "get_compiled_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201530",
        "description": ".history.utilities_20251016201530",
        "peekOfCode": "def get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201530",
        "documentation": {}
    },
    {
        "label": "get_yara_rules_paths",
        "kind": 2,
        "importPath": ".history.utilities_20251016201622",
        "description": ".history.utilities_20251016201622",
        "peekOfCode": "def get_yara_rules_paths(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201622",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201622",
        "description": ".history.utilities_20251016201622",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201622",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201622",
        "description": ".history.utilities_20251016201622",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201622",
        "documentation": {}
    },
    {
        "label": "get_compiled_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201622",
        "description": ".history.utilities_20251016201622",
        "peekOfCode": "def get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = util.get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201622",
        "documentation": {}
    },
    {
        "label": "get_yara_rules_paths",
        "kind": 2,
        "importPath": ".history.utilities_20251016201641",
        "description": ".history.utilities_20251016201641",
        "peekOfCode": "def get_yara_rules_paths(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201641",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201641",
        "description": ".history.utilities_20251016201641",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201641",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201641",
        "description": ".history.utilities_20251016201641",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201641",
        "documentation": {}
    },
    {
        "label": "get_compiled_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201641",
        "description": ".history.utilities_20251016201641",
        "peekOfCode": "def get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = get_yara_rules('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201641",
        "documentation": {}
    },
    {
        "label": "get_yara_rules_paths",
        "kind": 2,
        "importPath": ".history.utilities_20251016201650",
        "description": ".history.utilities_20251016201650",
        "peekOfCode": "def get_yara_rules_paths(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": ".history.utilities_20251016201650",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": ".history.utilities_20251016201650",
        "description": ".history.utilities_20251016201650",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": ".history.utilities_20251016201650",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": ".history.utilities_20251016201650",
        "description": ".history.utilities_20251016201650",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = get_yara_rules_paths('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201650",
        "documentation": {}
    },
    {
        "label": "get_compiled_rules",
        "kind": 2,
        "importPath": ".history.utilities_20251016201650",
        "description": ".history.utilities_20251016201650",
        "peekOfCode": "def get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = get_yara_rules_paths('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": ".history.utilities_20251016201650",
        "documentation": {}
    },
    {
        "label": "parse_yara_rule",
        "kind": 2,
        "importPath": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "description": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "peekOfCode": "def parse_yara_rule(file_path):\n    \"\"\"Parse YARA rule file to extract metadata.\"\"\"\n    rule_data = {\n        \"file\": os.path.basename(file_path),\n        \"path\": file_path,\n        \"rules\": []\n    }\n    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:\n        content = f.read()\n    # Find all rule definitions",
        "detail": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "documentation": {}
    },
    {
        "label": "build_index",
        "kind": 2,
        "importPath": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "description": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "peekOfCode": "def build_index(repo_dir):\n    \"\"\"Build an index of all YARA rules in the repository.\"\"\"\n    index = {\n        \"indexed_at\": datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\"),\n        \"categories\": {}\n    }\n    # Directories matching the repository structure\n    categories = [\n        \"malware\", \"ransomware\", \"backdoors\", \"trojans\", \"information_stealers\",\n        \"exploits\", \"apt\", \"packers\", \"cryptominers\", \"webshells\", \"maldocs\",",
        "detail": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "description": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser(description='YARA Rule Repository Indexer')\n    parser.add_argument('--repo-dir', default='.', help='Repository root directory')\n    parser.add_argument('--output', default='rule_index.json', help='Output index file path')\n    args = parser.parse_args()\n    print(f\"Building YARA rule index for: {args.repo_dir}\")\n    index = build_index(args.repo_dir)\n    with open(args.output, 'w') as f:\n        json.dump(index, f, indent=2)\n    # Print summary",
        "detail": "yararules.comprehensive-yara-rules.utils.rule_indexer",
        "documentation": {}
    },
    {
        "label": "walk_error",
        "kind": 2,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "def walk_error(err):\n    try:\n        if \"Error 3\" in str(err):\n            logging.error(removeNonAsciiDrop(str(err)))\n            print(\"Directory walk error\")\n            sys.exit(1)\n    except UnicodeError as e:\n        print(\"Unicode decode error in walk error message\")\n        sys.exit(1)\ndef removeNonAsciiDrop(string):",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "removeNonAsciiDrop",
        "kind": 2,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "def removeNonAsciiDrop(string):\n    nonascii = \"error\"\n    try:\n        # Generate a new string without disturbing characters\n        nonascii = \"\".join(i for i in string if ord(i)<127 and ord(i)>31)\n    except Exception as e:\n        traceback.print_exc()\n        pass\n    return nonascii\ndef transformOS(regex, platform):",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "transformOS",
        "kind": 2,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "def transformOS(regex, platform):\n    # Replace '\\' with '/' on Linux/Unix/OSX\n    if platform != \"windows\":\n        regex = regex.replace(r'\\\\', r'/')\n        regex = regex.replace(r'C:', '')\n    return regex\ndef replaceEnvVars(path):\n    # Setting new path to old path for default\n    new_path = path\n    # ENV VARS ----------------------------------------------------------------",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "replaceEnvVars",
        "kind": 2,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "def replaceEnvVars(path):\n    # Setting new path to old path for default\n    new_path = path\n    # ENV VARS ----------------------------------------------------------------\n    # Now check if an environment env is included in the path string\n    res = re.search(r\"([@]?%[A-Za-z_]+%)\", path)\n    if res:\n        env_var_full = res.group(1)\n        env_var = env_var_full.replace(\"%\", \"\").replace(\"@\", \"\")\n        # Check environment varibales if there is a matching var",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "initialize_filename_iocs",
        "kind": 2,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "def initialize_filename_iocs():\n    try:\n        for ioc_filename in os.listdir(FILENAME_IOC_DIRECTORY):\n            if 'filename' in ioc_filename:\n                logging.info(\"Compiling Filename IOCs from %s\" % ioc_filename)\n                with codecs.open(os.path.join(FILENAME_IOC_DIRECTORY, ioc_filename), 'r', encoding='utf-8') as file:\n                    lines = file.readlines()\n                    # Last Comment Line\n                    last_comment = \"\"\n                    for line in lines:",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "initialize_yara_rules",
        "kind": 2,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "def initialize_yara_rules():\n    yaraRules = \"\"\n    dummy = \"\"\n    try:\n        for yara_rule_directory in YARA_RULE_DIRECTORIES:\n            if not os.path.exists(yara_rule_directory):\n                continue\n            logging.info(\"Processing YARA rules folder {0}\".format(yara_rule_directory))\n            for root, directories, files in os.walk(yara_rule_directory, onerror=walk_error, followlinks=False):\n                for file in files:",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "YARA_RULE_DIRECTORIES",
        "kind": 5,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "YARA_RULE_DIRECTORIES = [r'./yara']\nFILENAME_IOC_DIRECTORY = r'./iocs'\ndef walk_error(err):\n    try:\n        if \"Error 3\" in str(err):\n            logging.error(removeNonAsciiDrop(str(err)))\n            print(\"Directory walk error\")\n            sys.exit(1)\n    except UnicodeError as e:\n        print(\"Unicode decode error in walk error message\")",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "FILENAME_IOC_DIRECTORY",
        "kind": 5,
        "importPath": "yararules.signature-base.build-rules",
        "description": "yararules.signature-base.build-rules",
        "peekOfCode": "FILENAME_IOC_DIRECTORY = r'./iocs'\ndef walk_error(err):\n    try:\n        if \"Error 3\" in str(err):\n            logging.error(removeNonAsciiDrop(str(err)))\n            print(\"Directory walk error\")\n            sys.exit(1)\n    except UnicodeError as e:\n        print(\"Unicode decode error in walk error message\")\n        sys.exit(1)",
        "detail": "yararules.signature-base.build-rules",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def main():\n    print(\"Welcome to CompSci 150 Malware Scanner\")\n    print(\" \")\n    user_response = input('''\n          Welcome, What would you like to do? Enter the number for your choice.\n        1) Scan the file system.\n        2) Scan the active running processes.\n        3) Scan the entire system.\n                        ''')\n    if user_response == '1':",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "scan_file_system",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def scan_file_system():\n    compiled_rules = util.get_compiled_rules()\n    matches = []\n    files_to_scan = util.get_all_files(\"C:\\\\\")\n    for file in files_to_scan:\n        try:\n            matches = compiled_rules.match(file)\n        except Exception as e:\n            print(f\"An error occurred: {e}\")\n            pass",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "scan_processes",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def scan_processes():\n    compiled_rules = util.get_compiled_rules()\n    pids = util.get_process_pids()\n    for id in pids:\n        matches = compiled_rules.match(pid=id)\nif __name__ == \"__main__\":\n    main()",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "get_yara_rules_paths",
        "kind": 2,
        "importPath": "utilities",
        "description": "utilities",
        "peekOfCode": "def get_yara_rules_paths(yara_directory):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A dictionary of YARA rule file paths.\n   \"\"\"\n    yara_files = {}\n    i = 1\n    for root, _, files in os.walk(yara_directory):\n        for file in files:",
        "detail": "utilities",
        "documentation": {}
    },
    {
        "label": "get_all_files",
        "kind": 2,
        "importPath": "utilities",
        "description": "utilities",
        "peekOfCode": "def get_all_files(drive_root):\n    \"\"\"\n    Load YARA rules from the 'yara_rules' directory.\n    Returns:\n        list: A list of all the files on a computer\n   \"\"\"\n    all_files_list = []\n    for root, _, files in os.walk(drive_root):\n        for file in files:\n            all_files_list.append(os.path.join(root, file))",
        "detail": "utilities",
        "documentation": {}
    },
    {
        "label": "get_process_pids",
        "kind": 2,
        "importPath": "utilities",
        "description": "utilities",
        "peekOfCode": "def get_process_pids():\n    return psutil.pids()\ndef get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = get_yara_rules_paths('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": "utilities",
        "documentation": {}
    },
    {
        "label": "get_compiled_rules",
        "kind": 2,
        "importPath": "utilities",
        "description": "utilities",
        "peekOfCode": "def get_compiled_rules():\n    if os.path.exists('.//yararules//yara_compiled_rules'):\n        compiled_rules = yara.load('.//yararules//yara_compiled_rules')\n    else:    \n        yara_rules_dict = get_yara_rules_paths('.\\\\yararules')\n        compiled_rules = yara.compile(filepaths=yara_rules_dict)\n        compiled_rules.save('.//yararules//yara_compiled_rules')\n    return compiled_rules",
        "detail": "utilities",
        "documentation": {}
    }
]